name: Django CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'Backend/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'Backend/**'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r Backend/WhatMunch_Django/requirements.txt
        
    - name: Set Environment Variables for Tests
      run: |
        echo "DJANGO_SETTINGS_MODULE=WhatMunch_Django.settings.test" >> $GITHUB_ENV
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
        echo "GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}" >> $GITHUB_ENV
        
    - name: Run Migrations & Tests
      run: |
        python Backend/WhatMunch_Django/manage.py migrate
        cd ./Backend/WhatMunch_Django/
        pytest

    - name: List files in Backend/WhatMunch_Django
      run: ls -l Backend/WhatMunch_Django
        
    - name: Create .env File from GitHub Secrets
      working-directory: Backend/WhatMunch_Django
      run: |
        cat <<EOF > .env
        DJANGO_SETTINGS_MODULE=WhatMunch_Django.settings.prod
        GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}
        SECRET_KEY=${{ secrets.SECRET_KEY }}
        DB_NAME=${{ secrets.DB_NAME }}
        DB_USER=${{ secrets.DB_USER }}
        DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        DB_HOST=${{ secrets.DB_HOST }}
        DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}
        DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}
        DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}
        EOF

    - name: List files in Current Dir
      run: ls
        
    - name: Build and Run Containers with Compose
      run: | 
        docker compose -f Backend/WhatMunch_Django/compose.yaml up --build -d
        echo "Waiting for Django container to be healthy..."
        until docker exec $(docker ps -q --filter "name=whatmunch-backend:latest") curl -s http://localhost:8080/api/health/ | grep "healthy"; do
        echo "Waiting for health check to pass..."
        sleep 10
        done
        echo "Django container is healthy!"
    
